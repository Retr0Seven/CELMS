name: CELMS CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-api:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: celms_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'celms-api/package-lock.json'
    
    - name: Install API dependencies
      run: npm ci
      working-directory: ./celms-api
    
    - name: Initialize test database
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d celms_test -f CELMS.sql
        PGPASSWORD=postgres psql -h localhost -U postgres -d celms_test -f functions_and_seed.sql
    
    - name: Run API tests
      run: npm test
      working-directory: ./celms-api
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGDATABASE: celms_test
        PGUSER: postgres
        PGPASSWORD: postgres
        JWT_SECRET: test-jwt-secret
        NODE_ENV: test
  
  test-client:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: 'celms-client/package-lock.json'
    
    - name: Install Client dependencies
      run: npm ci
      working-directory: ./celms-client
    
    - name: Run client tests
      run: npm test -- --watchAll=false
      working-directory: ./celms-client
      env:
        CI: true